import telebot
from telebot import types
import time
import threading
from threading import Timer
from telebot.types import ChatPermissions

TOKEN = 'YOUR_TOKEN_HERE'
bot = telebot.TeleBot(TOKEN)

welcomemessage = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à —É—é—Ç–Ω—ã–π Linux –ß–∞—Çüêß. –ó–¥–µ—Å—å –º—ã –æ–±—Å—É–∂–¥–∞–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≤–µ—â–∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å Linux. –ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ —á–∞—Ç–∞ –≤ –∑–∞–∫—Ä–µ–ø–µ. –ù–µ–∑–Ω–∞–Ω–∏–µ –∏—Ö –Ω–µ –æ—Å–≤–æ–±–æ–∂–¥–∞–µ—Ç –æ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏!"

@bot.message_handler(func=lambda m: True, content_types=['new_chat_members'])
def welcome_new_member(message):
    bot.reply_to(message, welcomemessage)

def is_user_admin(chat_id, user_id):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –≤ —á–∞—Ç–µ."""
    admin_list = bot.get_chat_administrators(chat_id)
    return any(admin.user.id == user_id for admin in admin_list)

@bot.message_handler(commands=['ban, kick'])
def handle_ban(message):
    chat_id = message.chat.id
    user_id = message.from_user.id

    if not is_user_admin(chat_id, user_id):
        bot.reply_to(message, "–¢—ã —á—ë, —Ö–∞–∫–µ—Ä —á—Ç–æ–ª–∏? –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.")
        return

    if message.reply_to_message:
        user_to_ban = message.reply_to_message.from_user.id
        try:
            bot.kick_chat_member(chat_id, user_to_ban)
            bot.reply_to(message, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–∞–Ω–µ–Ω/–∫–∏–∫–Ω—É—Ç.")
        except Exception as e:
            bot.reply_to(message, f"–£–ø—Å... –ù–µ –º–æ–≥—É –∑–∞–±–∞–Ω–∏—Ç—å/–∫–∏–∫–Ω—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
    else:
        bot.reply_to(message, "–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–±–∞–Ω–∏—Ç—å/–∫–∏–∫–Ω—É—Ç—å.")

@bot.message_handler(commands=['mute'])
def handle_mute(message):
    chat_id = message.chat.id
    user_id = message.from_user.id

    if not is_user_admin(chat_id, user_id):
        bot.reply_to(message, "–¢—ã —á—ë, —Ö–∞–∫–µ—Ä —á—Ç–æ–ª–∏? –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.")
        return

    if message.reply_to_message:
        user_to_mute = message.reply_to_message.from_user.id
        try:
            bot.restrict_chat_member(chat_id, user_to_mute, can_send_messages=False)
            bot.reply_to(message, "–≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–µ–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –≤ —Å–ú–£–¢—É.")
        except Exception as e:
            bot.reply_to(message, f"–£–ø—Å... –ù–µ –º–æ–≥—É –¥–∞—Ç—å '–º—É—Ç' –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: {e}")
    else:
        bot.reply_to(message, "–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –¥–∞—Ç—å '–º—É—Ç'.")

def unmute_user(chat_id, user_id):
    permissions = ChatPermissions(
        can_send_messages=True,
        can_send_media_messages=True,
        can_send_other_messages=True,
        can_add_web_page_previews=True
    )
    bot.restrict_chat_member(chat_id, user_id, permissions=permissions)

def temp_mute_user(chat_id, user_id, mute_duration):
    permissions = ChatPermissions(can_send_messages=False)
    bot.restrict_chat_member(chat_id, user_id, permissions=permissions)
    bot.send_message(chat_id, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–º—É—á–µ–Ω –Ω–∞ {mute_duration} —Å–µ–∫—É–Ω–¥.")

    Timer(mute_duration, unmute_user, args=(chat_id, user_id)).start()

@bot.message_handler(commands=['tmute'])
def handle_temp_mute(message):
    if message.reply_to_message:
        chat_id = message.chat.id
        user_id = message.from_user.id

        if not is_user_admin(chat_id, user_id):
            bot.reply_to(message, "–¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.")
            return

        command_parts = message.text.split()
        if len(command_parts) == 2 and command_parts[1].isdigit():
            mute_seconds = int(command_parts[1])
            user_to_mute = message.reply_to_message.from_user.id

            permissions = types.ChatPermissions(
                can_send_messages=False,
                can_send_media_messages=False,
                can_send_other_messages=False,
                can_add_web_page_previews=False
            )
            bot.restrict_chat_member(chat_id, user_to_mute, permissions)
            
            bot.reply_to(message, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª –¥–µ–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –≤ —Å–ú–£–¢—É –Ω–∞ {mute_seconds} —Å–µ–∫—É–Ω–¥.")

            threading.Thread(target=unmute_user, args=(chat_id, user_to_mute)).start()
        else:
            bot.reply_to(message, "–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /tmute <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ_—Å–µ–∫—É–Ω–¥>.")
    else:
        bot.reply_to(message, "–≠—Ç—É –∫–æ–º–∞–Ω–¥—É –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")


@bot.message_handler(commands=['report'])
def handle_report(message):
    bot.reply_to(message, '@mustdieie150, –±—Ä–∞—Ç–∞–Ω, —Ç–µ–±–µ —Ç—É—Ç –≤—ã–ø–∏—Å–∞–ª–∏ –≤—ã–∑–æ–≤!')

bot.polling(none_stop=True)
